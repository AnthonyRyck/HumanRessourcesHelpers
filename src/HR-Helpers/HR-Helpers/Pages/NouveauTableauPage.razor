@page "/nouveautableau"

@using HR_Helpers.ViewModels
@using HR_Helpers.Composants
@using AccessData.Models
@using Radzen.Blazor
@using Radzen
@using HR_Helpers.Data.ModelValidation

@inject INewTableViewModel ViewModel

<h2>Création d'un nouveau tableau</h2>

<AuthorizeView>
	<NotAuthorized>
		<div>Vous devez disposer d'un compte, où vous connecter.</div>
		<div><a href="/Identity/Account/Register">Inscription</a></div>
	</NotAuthorized>

	<Authorized>
		<div class="row">
			<div class="col">
				<EditForm EditContext="@ViewModel.EditContextValidation" OnValidSubmit="@ViewModel.CreateTable" Context="valideMoi">
					<div>
						<DataAnnotationsValidator />

						<div>
							<ValidationMessage For="@(() => ((TableauModelValidation)ViewModel.EditContextValidation.Model).NomDuTableau)" />
						</div>
					</div>
					<div class="hr-margin-2px-top-bottom">
						<span>Nom du tableau : <input type="text" @bind-value="ViewModel.TableauModel.NomDuTableau" /></span>
					</div>

					<div>
						<ValidationMessage For="@(() => ((TableauModelValidation)ViewModel.EditContextValidation.Model).Description)" />
					</div>
					<div class="hr-margin-2px-top-bottom">
						<RadzenTextArea Placeholder="Entrer une description..."
										Style="width:400px"
										@bind-Value="ViewModel.TableauModel.Description" />
					</div>

					<div>
						<ValidationMessage For="@(() => ((TableauModelValidation)ViewModel.EditContextValidation.Model).DateFinInscription)" />
					</div>
					<div class="hr-margin-2px-top-bottom">
						Date de fin d'inscription dans le tableau :
						<div>
							<RadzenDatePicker @bind-Value=ViewModel.TableauModel.DateFinInscription
											  DateFormat="d" />
						</div>
					</div>

					<div>
						<ValidationMessage For="@(() => ((TableauModelValidation)ViewModel.EditContextValidation.Model).Colonnes)" />
					</div>

					@*Ajout des colonnes*@
					<div class="hr-margin-2px-top-bottom">
						<RadzenButton Text="Ajouter une colonne"
									  Icon="add_circle"
									  ButtonStyle="ButtonStyle.Primary"
									  Click="ViewModel.OnClickAddColonne" />
					</div>

					<div class="hr-margin-2px-top-bottom">
						<RadzenButton Text="Sauvegarder le tableau"
									  Icon="save"
									  ButtonType="ButtonType.Submit"
									  ButtonStyle="ButtonStyle.Success" />
					</div>
				</EditForm>

				
			</div>

			<div class="col">
				@if (@ViewModel.ShowNewColonne)
				{
					<div class="hr-margin-5px hrhelpers-border hr-box-shadow-grey">
						<h3 class="hr-text-align-center">Nouvelle colonne</h3>

						<div class="hr-padding-10px">
							<div class="hr-margin-2px-top-bottom">Nom de colonne : <input type="text" @bind-value="ViewModel.NouvelleColonne.NomColonne" /></div>
							<div class="hr-margin-2px-top-bottom">Description : <input type="text" @bind-value="ViewModel.NouvelleColonne.Description" /></div>
							<div class="hr-margin-2px-top-bottom">
								Type de donnée : <select @onchange="@(e =>  ViewModel.OnChangeDataType(e))">
									<option></option>
									<option value="text">Texte</option>
									<option value="date">Date</option>
									<option value="number">Nombre</option>
									<option value="email">Email</option>
								</select>
							</div>

							<div>
								<div class="hr-margin-2px-top-bottom">
									<RadzenButton Text="Enregistrer et nouvelle colonne"
												  Click="ViewModel.SaveAndNewColonne" />
								</div>

								<div class="hr-margin-2px-top-bottom">
									<RadzenButton Text="Enregistrer et Terminer"
												  ButtonStyle="ButtonStyle.Info"
												  Click="ViewModel.CloseAndSaveNewColonne" />
								</div>

								<div class="hr-margin-2px-top-bottom">
									<RadzenButton Text="Terminer"
												  ButtonStyle="ButtonStyle.Light"
												  Click="ViewModel.CloseNewColonne" />
								</div>
							</div>
						</div>
					</div>
				}
			</div>
		</div>

			@*Affichage des colonnes*@
			<div class="hr-margin-2px-top-bottom">
				@if (ViewModel.TableauModel.Colonnes != null
				 && ViewModel.TableauModel.Colonnes.Count > 0)
				{
				<table class="table">
					<thead>
						<tr>
							<th style="width:85px;">
								<i>Options</i>
							</th>

							<th>
								<i>Nom de colonne</i>
							</th>

							<th>
								<i>Type de donnée</i>
							</th>

							<th>
								<i>Description</i>
							</th>
						</tr>
					</thead>

					<tbody>
						@foreach (var colonne in ViewModel.TableauModel.Colonnes)
						{
						<tr>
							<td>
								<span>
									<RadzenButton Icon="edit"
												  Size="ButtonSize.Small"
												  Click="@(() => ViewModel.EditColonne(colonne.IdColonne,
																				colonne.TableId))" />

									<RadzenButton ButtonStyle="ButtonStyle.Danger"
												  Icon="close"
												  Size="ButtonSize.Small"
												  Click="@(() => ViewModel.DeleteColonne(colonne.IdColonne))"/>
								</span>
							</td>

							<td>
								@colonne.NomColonne
							</td>

							<td>
								@colonne.TypeData
							</td>

							<td>
								@colonne.Description
							</td>
						</tr>
						}
					</tbody>
				</table>
				}
				else
				{
					<div>
						Aucune colonne de définie.
					</div>
				}

			</div>
		

	</Authorized>
</AuthorizeView>

@code {



	protected override void OnInitialized()
	{
		ViewModel.EditContextValidation = new EditContext(ViewModel.TableauModel);
	}

}
